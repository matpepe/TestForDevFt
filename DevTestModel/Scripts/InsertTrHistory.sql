---- new trigger -NON WORKING 

--USE TestDevALL

--BEGIN TRAN

--IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'DataHistoryArticle')
--BEGIN
--    CREATE TABLE DataHistoryArticle
--    (
--	[ArticleId] [int] IDENTITY(1,1) NOT NULL,
--	[Id] [nvarchar](max) NOT NULL,
--	[Guid] [nvarchar](max) NULL,
--	[PublishedOn] [bigint] NOT NULL,
--	[ImageUrl] [nvarchar](max) NULL,
--	[Title] [nvarchar](max) NULL,
--	[Url] [nvarchar](max) NULL,
--	[Body] [nvarchar](max) NULL,
--	[Tags] [nvarchar](max) NULL,
--	[Lang] [nvarchar](max) NULL,
--	[Upvotes] [nvarchar](max) NULL,
--	[Downvotes] [nvarchar](max) NULL,
--	[Categories] [nvarchar](max) NULL,
--	[SourceInfoId] [int] NULL,
--	[NewsApiResponseApiResponseId] [int] NULL,
--	Active bit NULL DEFAULT(1), 
--	DateAndTimeInserted smalldatetime NULL
--    );
--END
--GO
--IF OBJECT_ID('AfterInsert_NewsArticle', 'TR') IS NOT NULL
--BEGIN
--    -- Drop the trigger if it exists
--    DROP TRIGGER AfterInsert_NewsArticle;
--END;
--GO
---- Create the AFTER INSERT trigger
--CREATE TRIGGER AfterInsert_NewsArticle
--ON NewsArticle
--AFTER INSERT
--AS
--BEGIN

--PRINT 'Trigger Executed';

--INSERT INTO dbo.DataHistoryArticle (
--    Id,
--    Guid,
--    PublishedOn,
--    ImageUrl,
--    Title,
--    Url,
--    Body,
--    Tags,
--    Lang,
--    Upvotes,
--    Downvotes,
--    Categories,
--    SourceInfoId,
--    NewsApiResponseApiResponseId,
--    Active,
--    DateAndTimeInserted
--)
--SELECT
--    source.Id,
--    source.Guid,
--    source.PublishedOn,
--    source.ImageUrl,
--    source.Title,
--    source.Url,
--    source.Body,
--    source.Tags,
--    source.Lang,
--    source.Upvotes,
--    source.Downvotes,
--    source.Categories,
--    source.SourceInfoId,
--    source.NewsApiResponseApiResponseId,
--    1, -- Assuming Active should be set to 1
--    GETDATE()
--FROM
--    dbo.NewsArticle AS source
--WHERE NOT EXISTS (
--    SELECT 1
--    FROM dbo.DataHistoryArticle AS target
--    WHERE target.Id = source.Id
--);

---- Display the updated state of DataHistoryArticle after the operation
--SELECT 'DataHistoryArticle After Operation' AS 'INFO', * FROM dbo.DataHistoryArticle;
--PRINT 'END'

--END;

--GO
--ENABLE TRIGGER AfterInsert_NewsArticle ON NewsArticle;
--GO
----DISABLE TRIGGER AfterInsert_NewsArticle ON NewsArticle;
----GO

--ROLLBACK TRAN
